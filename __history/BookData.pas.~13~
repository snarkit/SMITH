unit BookData;

interface

uses
  SysUtils, Classes, IB_Components, IB_Access, BookConcepts,
  Dialogs, OrganismConcepts;

type
  TBooksDM = class(TDataModule)
    BooksConnection: TIB_Connection;
    MarkedBooksDS: TIB_DataSource;
    MarkedBooksQuery: TIB_Query;
    BooksTransaction: TIB_Transaction;
    RefsByOrgQuery: TIB_Query;
    RefsByOrgDS: TIB_DataSource;
    BookDSQL: TIB_DSQL;
    RefsByBookQuery: TIB_Query;
    RefsByBookDS: TIB_DataSource;
    procedure MarkedBooksQueryBeforePost(IB_Dataset: TIB_Dataset);
  private
    { Private declarations }
  public
    { Public declarations }
    function IsBook(book:string):boolean;
    procedure writeBookRef(currentOrg:Organism;currentRef:PageRef;oldKeys:JPOldKeys);
  end;

var
  BooksDM: TBooksDM; CurrentBook:Book;

implementation

{$R *.dfm}

procedure TBooksDM.MarkedBooksQueryBeforePost(IB_Dataset: TIB_Dataset);
begin
 if (IB_DataSet.FieldByName('PageNo').Value<1) or (IB_DataSet.FieldByName('PageNo').Value>
    CurrentBook.NumberOfPages)
 then begin
      MessageDlg('Page number outside range of book',mtError, [mbOK], 0);
      IB_DataSet.FieldByName('PAGENO').Clear;
      Abort;
 end;
end;

function TBooksDM.IsBook(book:string):boolean;
begin
    result:=false;
    with BookDSQL do            //make sure book exists
    begin
      begin
        SQL.Clear;
        SQL.Add('Select * from books where bookcode='+quotedstr(book));
        Execute;
        if not eof then result:=true;
      end;
    end;
end;

procedure TBooksDM.writeBookRef(currentOrg:Organism;currentRef:PageRef;oldKeys:JPOldKeys);
var LineID:integer;
begin
    if IsBook(currentRef.book) then
    begin
      with BookRefsQuery do
      begin
          Close;                //avoid duplcate references
          SQL.Clear;
          SQL.Add('Select * from BOOKREFS where (orgcode='+quotedstr(oldKeys.Code)+
          ') and (bookcode='+quotedstr(oldKeys.book)+') and (pageno='+IntToStr(oldKeys.page)+')');
          Open;
          First;
          if eof then
          begin       //insert
            Close;
            SQL.Clear;
            SQL.Add('INSERT INTO BOOKREFS (ORGCODE, BOOKCODE,  PAGENO) VALUES ('
            +quotedstr(currentRef.eppocode)+', '+quotedstr(currentRef.book)+', '+IntToStr(currentRef.page)+')');
            ExecSQL;
          end
          else begin   //update
            LineID:=FieldValues['REFID'];   //unique line identifier
            Close;
            SQL.Clear;
            SQL.Add('UPDATE BOOKREFS set ORGCODE='+quotedstr(currentRef.eppocode)+', BOOKCODE='+quotedstr(currentRef.book)+
              ', PAGENO='+IntToStr(currentRef.page)+' where REFID='+IntToStr(LineID));
            ExecSQL;
          end;
      end;
    end;
end;

end.
